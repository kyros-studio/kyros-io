var store = [{
        "title": "ðŸš§ Kyros Quick-Start Guide",
        "excerpt":"Kyros is designed to be easy to set up and use, allowing data engineers to deploy, customize, and scale data platforms affordably. Follow this guide to get Kyros up and running quickly.   Installing Kyros   Kyros can be installed as a Docker-based solution or directly on any affordable hosting platform. You can configure Kyros to include only the components you need, such as Apache Spark, dbt, and Apache Flink.   Docker-Based Installation   If you prefer to use Kyros with Docker, follow these steps:           Clone the Kyros repository:       git clone https://github.com/kyroslabs/kyros-project cd kyros-project                Build and run the Kyros Docker containers:       docker-compose up --build                Kyros should now be running. You can access the various services (like JupyterLab, MinIO, etc.) by navigating to the provided URLs in the terminal output.              JupyterLab       MinIO       Apache Spark UI           For more details on how to customize your deployment, refer to the Configuration Guide.   System Requirements   Kyros is designed to run on minimal hardware, but for optimal performance, the following resources are recommended:      CPU: 4+ cores   Memory: 8GB+   Storage: 50GB+ (SSD preferred)   Configuration   Kyros can be customized via the docker-compose.yml file. You can enable or disable components like Apache Spark, dbt, and Flink as needed. Hereâ€™s an example of how to configure the environment:   services:   spark-master:     image: kyroslabs/spark:latest     ports:       - \"8080:8080\"   jupyterlab:     image: kyroslabs/jupyterlab:latest     environment:       - JUPYTER_TOKEN=kyros   Hosting Kyros on a Cloud Provider      Spin up a new cloud instance from your preferred cloud provider.        SSH into your instance and install Docker:       sudo apt update sudo apt install docker docker-compose           Clone the Kyros repository and follow the same steps outlined above for Docker installation.   Updating Kyros   To update Kyros to the latest version, you can pull the latest changes from the repository and rebuild the Docker containers:   git pull origin main docker-compose up --build   Customizing Kyros   Kyros is fully customizable. You can add, remove, or modify services in the docker-compose.yml file. Some of the key components you can customize:      Apache Spark for large-scale data processing   dbt for building data pipelines and transformations   Apache Flink for real-time stream processing   MinIO for S3-compatible object storage   Refer to the Customization Guide for more details on configuring each service.   Troubleshooting   If you encounter issues, please check the logs for the service in question. For example, to view the logs for the Spark Master:   docker-compose logs spark-master   You can also check the Kyros GitHub Issues for known issues and troubleshooting tips.     Thatâ€™s it! You should now have Kyros running on your local machine or hosting platform. For more advanced setup options, refer to the Advanced Configuration Guide.  ","categories": [],
        "tags": [],
        "url": "/docs/quick-start-guide/",
        "teaser": "/assets/images/kyros-logo-800x500-teaser.png"
      },{
        "title": "Introducing Kyros: A New Era of Cloud-Agnostic Data Platforms",
        "excerpt":"We are thrilled to announce the upcoming launch of Kyros, a cloud-agnostic, modular, and fully customizable data platform designed to offer an affordable and scalable alternative to traditional cloud solutions.   What is Kyros?   Kyros is an open-source platform, Apache-licensed, built to empower data engineers and businesses to design, deploy, and manage their data platforms with flexibility and ease. Whether you are working with large-scale data processing or simply need a cost-effective solution for your business, Kyros is here to simplify your infrastructure needs.   Key Features:      Modular Architecture: Deploy only what you need, with integrations for tools like Apache Spark, dbt, and Apache Flink.   Cost-Effective Hosting: Take advantage of affordable hosting services with predictable and transparent pricing.   Open-Source: Completely open-source and licensed under Apache 2.0, Kyros supports modern data storage formats such as Delta Lake, Apache Iceberg, and Apache Pinot.   Cloud-Agnostic: Avoid vendor lock-in and enjoy the flexibility to run Kyros on any infrastructure.   Seamless Integration: Built to easily integrate with your existing tools and workflows, reducing operational complexity.   Why Kyros?   The complexity, limitations, and costs of proprietary platforms like Databricks inspired the development of Kyros. We aim to simplify data infrastructure, reduce costs, and offer a scalable solution that evolves with your needs â€” all while remaining vendor-independent.   With Kyros, you get predictable pricing, modular deployments, and an easy-to-manage platform. Perfect for teams with fluctuating workloads or those looking for an alternative to the overly complicated and costly options out there.   Stay tuned as we get closer to the official launch of Kyros! In the meantime, follow us on GitHub for updates, and be part of the future of cloud-agnostic data platforms.     Follow our journey as we prepare to redefine the way data platforms are designed, deployed, and managed. More exciting updates are on the way, so be sure to subscribe for the latest news!   ","categories": ["announcement"],
        "tags": ["kyros","cloud-agnostic","data-platform","open-source"],
        "url": "/announcement/welcome-to-kyros/",
        "teaser": "/assets/images/kyros-logo-800x500-teaser.png"
      }]
